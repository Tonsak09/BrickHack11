[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://cfop3o8vccnra"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_hd5ls"]
parameter_name = "Texture2DParameter"
texture_filter = 1
texture_repeat = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_cuttr"]
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_fkxjb"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_a4kjm"]
parameter_name = "Scaling"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_rpn6g"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec2 Scaling = vec2(1.000000, 1.000000);
uniform sampler2D Texture2DParameter : filter_nearest, repeat_enable;



void fragment() {
// Input:4
	vec2 n_out4p0 = UV;


// Vector2Parameter:5
	vec2 n_out5p0 = Scaling;


// VectorOp:6
	vec2 n_out6p0 = n_out4p0 * n_out5p0;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture2DParameter, n_out6p0);


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_hd5ls")
nodes/fragment/2/position = Vector2(-600, 400)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_cuttr")
nodes/fragment/3/position = Vector2(-140, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeInput_fkxjb")
nodes/fragment/4/position = Vector2(-780, 0)
nodes/fragment/5/node = SubResource("VisualShaderNodeVec2Parameter_a4kjm")
nodes/fragment/5/position = Vector2(-720, 100)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_rpn6g")
nodes/fragment/6/position = Vector2(-440, 40)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 0, 4, 0, 6, 0, 5, 0, 6, 1, 6, 0, 3, 0)
